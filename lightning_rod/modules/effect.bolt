from nbtlib import Byte, Float

EFFECTS = {
    1: 'speed',
    2: 'slowness',
    3: 'haste',
    4: 'mining_fatigue',
    5: 'strength',
    6: 'instant_health',
    7: 'instant_damage',
    8: 'jump_boost',
    9: 'nausea',
    10: 'regeneration',
    11: 'resistance',
    12: 'fire_resistance',
    13: 'water_breathing',
    14: 'invisibility',
    15: 'blindness',
    16: 'night_vision',
    17: 'hunger',
    18: 'weakness',
    19: 'poison',
    20: 'wither',
    21: 'health_boost',
    22: 'absorption',
    23: 'saturation',
    24: 'glowing',
    25: 'levitation',
    26: 'luck',
    27: 'bad_luck',
    28: 'slow_falling',
    29: 'conduit_power',
    30: 'dolphins_grace',
    31: 'bad_omen',
    32: 'hero_of_the_village',
    33: 'darkness'
}

def get_effect_string_id(effect_numeric_id: int):
    return EFFECTS[effect_numeric_id]

def get_effect_numeric_id(effect_string_id: str):
    for num_id, str_id in EFFECTS.items():
        if str_id == effect_string_id:
            return num_id

def set_effect(
    effect_id: str,
    duration_seconds: int,
    amplifier: int,
    hide_particles: bool = True,
):
    effect give @s effect_id duration_seconds amplifier hide_particles

def set_effect_tick(
    effect_id: str,
    duration_ticks: int,
    amplifier: int,
    hide_particles: bool = True,
):
    effect_numeric_id = get_effect_numeric_id(effect_id)

    if entity @s[type=player]:
        summon area_effect_cloud ~ ~ ~ {
            Radius: Float(0.0),
            Age: 4,
            WaitTime: 0,
            Duration: 6,
            Effects: [{
                Id: Byte(effect_numeric_id),
                Amplifier: Byte(amplifier),
                Duration: duration_ticks,
                ShowParticles: Byte(not hide_particles)
            }]
        }
    if entity @s[type=!player]:
        data modify entity @s ActiveEffects append value {
            Id: effect_numeric_id,
            Duration: duration_ticks,
            Amplifier: Byte(amplifier),
            ShowIcon: 0b,
            ShowParticles: Byte(not hide_particles),
            Ambient: 0b
        }

def clear_effect(effect_id: str):
    effect clear @s effect_id
